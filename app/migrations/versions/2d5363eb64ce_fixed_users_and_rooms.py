"""Fixed users and rooms

Revision ID: 2d5363eb64ce
Revises: 9edfdaae304a
Create Date: 2024-10-28 13:37:57.186400

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2d5363eb64ce'
down_revision: Union[str, None] = '9edfdaae304a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('rooms', 'price',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('rooms', 'services',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('rooms', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.create_foreign_key(None, 'rooms', 'hotels', ['hotel_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'rooms', type_='foreignkey')
    op.alter_column('rooms', 'quantity',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rooms', 'services',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('rooms', 'price',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('rooms', 'hotel_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
